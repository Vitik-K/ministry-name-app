apiVersion: v1
kind: DeploymentConfig
metadata:
  annotations:
    kompose.cmd: /snap/kompose/19/kompose-linux-amd64 --provider openshift --file
      docker-compose.yml convert
    kompose.version: 1.21.0 (992df58d8)
  creationTimestamp: null
  labels:
    io.kompose.service: postgres
  name: postgres
spec:
  replicas: 1
  selector:
    io.kompose.service: postgres
  strategy:
    resources: {}
    type: Recreate
  template:
    metadata:
      creationTimestamp: null
      labels:
        io.kompose.network/name-app: "true"
        io.kompose.service: postgres
    spec:
      containers:
      - env:
        - name: DB_PORT
          valueFrom:
            configMapKeyRef:
              key: DB_PORT
              name: env
        - name: PORT
          valueFrom:
            configMapKeyRef:
              key: PORT
              name: env
        - name: POSTGRES_DB
          valueFrom:
            configMapKeyRef:
              key: POSTGRES_DB
              name: env
        - name: POSTGRES_HOST
          valueFrom:
            configMapKeyRef:
              key: POSTGRES_HOST
              name: env
        - name: POSTGRES_PASSWORD
          valueFrom:
            configMapKeyRef:
              key: POSTGRES_PASSWORD
              name: env
        - name: POSTGRES_USER
          valueFrom:
            configMapKeyRef:
              key: POSTGRES_USER
              name: env
        image: ' '
        name: postgres
        ports:
        - containerPort: 5432
        resources: {}
        volumeMounts:
        - mountPath: /var/lib/postgresql/data
          name: postgres-volume-test
      restartPolicy: Always
      volumes:
      - name: postgres-volume-test
        persistentVolumeClaim:
          claimName: postgres-volume-test
  test: false
  triggers:
  - type: ConfigChange
  - imageChangeParams:
      automatic: true
      containerNames:
      - postgres
      from:
        kind: ImageStreamTag
        name: postgres:latest
    type: ImageChange
status: {}
